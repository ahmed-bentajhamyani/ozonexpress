// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OzonExpress.Data;

#nullable disable

namespace OzonExpress.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OzonExpress.Models.Agence", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Agences");
                });

            modelBuilder.Entity("OzonExpress.Models.Article", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("Prix")
                        .HasColumnType("real");

                    b.Property<int?>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("OzonExpress.Models.ArticlePanier", b =>
                {
                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int?>("PanierId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("ArticleId", "PanierId");

                    b.HasIndex("PanierId");

                    b.ToTable("ArticlePaniers");
                });

            modelBuilder.Entity("OzonExpress.Models.ArticleVente", b =>
                {
                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int?>("VenteId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("ArticleId", "VenteId");

                    b.HasIndex("VenteId");

                    b.ToTable("ArticleVentes");
                });

            modelBuilder.Entity("OzonExpress.Models.Blog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Article")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("DateAjout")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("OzonExpress.Models.Categorie", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OzonExpress.Models.Client", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("OzonExpress.Models.Commentaire", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Commentaires");
                });

            modelBuilder.Entity("OzonExpress.Models.FAQ", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Reponse")
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("OzonExpress.Models.Panier", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Paniers");
                });

            modelBuilder.Entity("OzonExpress.Models.Tarif", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AgenceArrId")
                        .HasColumnType("int");

                    b.Property<int?>("AgenceDepId")
                        .HasColumnType("int");

                    b.Property<float?>("Cout")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AgenceArrId");

                    b.HasIndex("AgenceDepId");

                    b.ToTable("Tarifs");
                });

            modelBuilder.Entity("OzonExpress.Models.Vente", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Ventes");
                });

            modelBuilder.Entity("OzonExpress.Models.Article", b =>
                {
                    b.HasOne("OzonExpress.Models.Categorie", "Categorie")
                        .WithMany("Articles")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("OzonExpress.Models.ArticlePanier", b =>
                {
                    b.HasOne("OzonExpress.Models.Article", "Article")
                        .WithMany("ArticlePaniers")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OzonExpress.Models.Panier", "Panier")
                        .WithMany("ArticlePaniers")
                        .HasForeignKey("PanierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Panier");
                });

            modelBuilder.Entity("OzonExpress.Models.ArticleVente", b =>
                {
                    b.HasOne("OzonExpress.Models.Article", "Article")
                        .WithMany("ArticleVentes")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OzonExpress.Models.Vente", "Vente")
                        .WithMany("ArticleVentes")
                        .HasForeignKey("VenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Vente");
                });

            modelBuilder.Entity("OzonExpress.Models.Commentaire", b =>
                {
                    b.HasOne("OzonExpress.Models.Client", "Client")
                        .WithMany("Commentaires")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OzonExpress.Models.Tarif", b =>
                {
                    b.HasOne("OzonExpress.Models.Agence", "AgenceArr")
                        .WithMany()
                        .HasForeignKey("AgenceArrId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OzonExpress.Models.Agence", "AgenceDep")
                        .WithMany("Tarifs")
                        .HasForeignKey("AgenceDepId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AgenceArr");

                    b.Navigation("AgenceDep");
                });

            modelBuilder.Entity("OzonExpress.Models.Vente", b =>
                {
                    b.HasOne("OzonExpress.Models.Client", "Client")
                        .WithMany("Ventes")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("OzonExpress.Models.Agence", b =>
                {
                    b.Navigation("Tarifs");
                });

            modelBuilder.Entity("OzonExpress.Models.Article", b =>
                {
                    b.Navigation("ArticlePaniers");

                    b.Navigation("ArticleVentes");
                });

            modelBuilder.Entity("OzonExpress.Models.Categorie", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("OzonExpress.Models.Client", b =>
                {
                    b.Navigation("Commentaires");

                    b.Navigation("Ventes");
                });

            modelBuilder.Entity("OzonExpress.Models.Panier", b =>
                {
                    b.Navigation("ArticlePaniers");
                });

            modelBuilder.Entity("OzonExpress.Models.Vente", b =>
                {
                    b.Navigation("ArticleVentes");
                });
#pragma warning restore 612, 618
        }
    }
}
